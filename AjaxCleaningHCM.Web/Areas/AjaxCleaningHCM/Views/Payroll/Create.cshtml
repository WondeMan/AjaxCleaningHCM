@model AjaxCleaningHCM.Domain.DTO.MasterData.Response.EmployeeResponseDtos
@{

    string btnValue = string.Empty;
    Layout = "_Default";
    var employeeIds = Model.EmployeeDtos.Select(a => a.EmployeeId.ToString()).ToList();
}

<div class="card">
    <div class="card-header">
        @*    <a class="box-title col-md-2" asp-action="Index"><i class="fa fa-arrow-left text-green"></i>  Attendance List </a>
        <a class="btn btn-outline-success" href="@Url.Action("Create")"><i class="fa fa-plus"></i> Take Member Attendance</a>
        <a class="btn btn-outline-success" href="@Url.Action("TakeMyAttendance")"><i class="fa fa-plus"></i> Take My Attendance</a>
    *@     <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>

    <div class="card-body">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="OldRole" value="@ViewBag.OldRole" />
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.Label(null, "Payroll", new { @class = "control-label" })
                        <input type="text" id="searchPayroll" onkeyup="searchPayrolls()" placeholder="Search Payroll..">
                    </div>
                    <div class="form-group">
                        Select all &nbsp;&nbsp;<input type="checkbox" name="selectAll" value="1" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.Label(null, "Month", new { @class = "control-label" })
                        <input class="form-control" name="Month" type="month" value="@DateTime.Now.ToString("yyyy-MM")" />
                    </div>
                </div>

            </div>

            <div class="row">
                @foreach (var p in Model.EmployeeDtos)
                {
                    if (employeeIds.Contains(p.Id.ToString()))
                    {
                        <div class="col-lg-6 col-md-6 col-sm-12  checkbox-Payroll">

                            <input checked type="checkbox" name="Payroll" id="@p.Id" value="@p.Id" />
                            @Html.Label(null, (string)p.EmployeeId + " (" + p.FullName + ")", new { @for = p.Id })
                        </div>
                    }
                    else
                    {
                        <div class="col-lg-6 col-md-6 col-sm-12 checkbox-Payroll">
                            <input type="checkbox" name="Payroll" id="@p.Id" value="@p.Id" />
                            @Html.Label(null, (string)p.EmployeeId + " (" + p.FullName + ")", new { @for = p.Id })

                        </div>
                    }

                }
            </div>

            <br />
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <!-- /.card-body -->
</div>

<style>
    #searchPayroll {
        /*background-image: url('/css/searchicon.png'); /* Add a search icon to input */
        background-image: url('img/search.png');
        background-position: 10px 12px; /* Position the search icon */
        background-repeat: no-repeat; /* Do not repeat the icon image */
        width: 100%; /* Full-width */
        font-size: 16px; /* Increase font-size */
        padding: 12px 20px 12px 40px; /* Add some padding */
        border: 1px solid #ddd; /* Add a grey border */
        margin-bottom: 12px; /* Add some space below the input */
    }
</style>

@section Scripts {

    <script type="text/javascript">
        $(function () {

            //Initialize Select2 Elements
            $('.select2').select2();

            $('input[type=checkbox][name=selectAll]').on('ifChecked ifUnchecked', function (event) {
                if (event.type == 'ifChecked')
                    $('input[type=checkbox][name=Payroll]').iCheck('check');
                else
                    $('input[type=checkbox][name=Payroll]').iCheck('uncheck');
            });

            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' // optional
            });
        });

        function searchPayrolls() {

            // Declare variables
            var input, filter, div, label, i, txtValue;
            input = document.getElementById('searchPayroll');
            filter = input.value.toUpperCase();

            div = document.getElementsByClassName("checkbox-Payroll");

            // Loop through all list items, and hide those who don't match the search query
            for (i = 0; i < div.length; i++) {

                label = div[i].getElementsByTagName("label")[0];
                txtValue = label.textContent || label.innerText;

                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    div[i].style.display = "";
                } else {
                    div[i].style.display = "none";
                }
            }
        }
    </script>
}

